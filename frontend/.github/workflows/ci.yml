name: CI Pipeline

on:
  pull_request:
    branches: [ dev ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test:ci

    - name: Build application
      run: npm run build

    - name: Build Docker image
      run: docker build -t reservation-frontend .

    - name: Check Docker build
      run: |
        if [ $? -eq 0 ]; then
          echo "Docker build successful"
        else
          echo "Docker build failed"
          exit 1
        fi

    - name: Create Issue on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const pr_number = context.payload.pull_request.number;
          const pr_title = context.payload.pull_request.title;
          
          await github.rest.issues.create({
            owner,
            repo,
            title: `CI Failed: ${pr_title}`,
            body: `CI pipeline failed for PR #${pr_number}\n\nPlease check the [Actions tab](${context.payload.repository.html_url}/actions/runs/${context.runId}) for more details.`,
            labels: ['CI failure', 'needs attention']
          });

    - name: Auto approve PR if all checks pass
      if: success()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const pr_number = context.payload.pull_request.number;
          
          await github.rest.pulls.createReview({
            owner,
            repo,
            pull_number: pr_number,
            event: 'APPROVE',
            body: 'All CI checks have passed! This PR can be merged.'
          });
